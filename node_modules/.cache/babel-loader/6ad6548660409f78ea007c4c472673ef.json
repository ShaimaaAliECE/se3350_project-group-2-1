{"ast":null,"code":"var _jsxFileName = \"/Users/Andy/Documents/GitHub/se3350_project-group-2-1/src/components/Game.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef } from \"react\";\nimport MergeSort from \"../utils/sorting/MergeSort.js\";\nimport ArrayGroup from \"./ArrayGroup.jsx\";\nimport Githubicon from \"../images/Githubicon.js\";\nimport WalkThrough from \"./WalkThrough.jsx\";\nimport { Grid, TextField, Button, AppBar, FormControl, RadioGroup, Radio, FormControlLabel, FormLabel, Toolbar } from '@mui/material';\n/**\n * Navigation bar at top of screen, add elements to the toolbar part like drop downs etc\n *\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavBar = () => {\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      variant: \"dense\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Array Sorting Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Githubicon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n/**\n * React component containing all functionality related to the sorting game (renders the game)\n * @param props \n */\n\n\n_c = NavBar;\nexport default function Game(props) {\n  _s();\n\n  // State initialization\n  const isRunning = useRef(false); // Game is not running by default (give users a chance to set game parameters)\n\n  const [gameArray, setGameArray] = useState([]); // Multi-dimensional array that stores each \"layer\" of the merge sort\n\n  const [mergedArray, setMergedArray] = useState([]);\n  const [gameType, setGameType] = useState(\"Merge Sort\"); //for picking between the different sorting\n\n  const [gameMode, setGameMode] = useState(\"playable\"); //for picking between walkthrough or playable\n  //size, range state -> array params\n\n  const [range, setRange] = useState(10);\n  const [size, setSize] = useState(10);\n\n  function setMerged(value) {// Add value to merged array\n  } // function determining game level\n\n\n  function startGame(mode) {\n    //pass in game mode for determining which button was pushed, start game or walkthough\n    if (!isRunning.current) {\n      let numArray = MergeSort(new Number(size), new Number(range));\n      setGameArray(numArray);\n      setGameMode(mode);\n      isRunning.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"sorting-game\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game-menu\",\n      style: {\n        marginTop: 15,\n        marginLeft: 20,\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          width: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          id: \"demo-controlled-radio-buttons-group\",\n          children: \"Algorithim Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          \"aria-labelledby\": \"demo-controlled-radio-buttons-group\",\n          name: \"controlled-radio-buttons-group\",\n          value: gameType,\n          onChange: event => setGameType(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            style: {\n              marginTop: 10\n            },\n            value: \"Merge Sort\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 38\n            }, this),\n            label: \"Merge Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            style: {\n              marginTop: 10\n            },\n            value: \"Quick Sort\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 38\n            }, this),\n            label: \"Quick Sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          marginLeft: 60\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          xs: {\n            display: 'flex',\n            flexDirection: 'row'\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            id: \"demo-controlled-radio-buttons-group\",\n            children: \"Array content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                marginTop: 10\n              },\n              value: range,\n              onChange: event => setRange(event.target.value),\n              label: \"Range\",\n              id: \"outlined-size-small\",\n              defaultValue: \"Small\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              style: {\n                marginTop: 20\n              },\n              value: size,\n              onChange: event => setSize(event.target.value),\n              label: \"Size\",\n              id: \"outlined-size-small\",\n              defaultValue: \"Small\",\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: 70,\n            marginTop: 50\n          },\n          children: !isRunning.current ?\n          /*#__PURE__*/\n          //buttons for starting or doing the walkthough, need to be styled\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => startGame(\"playable\"),\n              variant: \"contained\",\n              style: {\n                width: 140,\n                height: 50\n              },\n              children: \"Start Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => startGame(\"animation\"),\n              variant: \"contained\",\n              style: {\n                width: 140,\n                height: 50\n              },\n              children: \"Level 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => startGame(\"playable_lvl2\"),\n              variant: \"contained\",\n              style: {\n                width: 140,\n                height: 50\n              },\n              children: \"Level 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => startGame(\"walkthrough\"),\n              variant: \"contained\",\n              style: {\n                width: 140,\n                height: 50\n              },\n              children: \"WalkThrough\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setGameArray([]);\n              isRunning.current = false;\n            },\n            style: {\n              width: 140,\n              height: 50\n            },\n            variant: \"contained\",\n            children: \"Clear Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isRunning.current ? //for loading the game, if game is running then...\n      gameMode === \"playable\" ?\n      /*#__PURE__*/\n      //if gamemode is playable then load the array group\n      _jsxDEV(ArrayGroup, {\n        gameRunning: isRunning,\n        label: \"Root Array\",\n        depth: 0,\n        index: 1,\n        level: 2,\n        mergedArray: mergedArray,\n        pushToMerged: setMerged,\n        numArray: gameArray[0][1]\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }, this) : gameMode === \"playable_lvl2\" ?\n      /*#__PURE__*/\n      //if gamemode is playable then load the array group\n      _jsxDEV(ArrayGroup, {\n        gameRunning: isRunning,\n        label: \"Root Array - Level 2\",\n        depth: 0,\n        index: 1,\n        level: 3,\n        mergedArray: mergedArray,\n        pushToMerged: setMerged,\n        numArray: gameArray[0][1]\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }, this) : gameMode === \"walkthrough\" ?\n      /*#__PURE__*/\n      //if gamemode is anything else load the walkthrough\n      _jsxDEV(WalkThrough, {\n        numArra: true,\n        y: gameArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }, this) : gameMode === \"animation\" ?\n      /*#__PURE__*/\n      //else for nothing if game isnt running\n      _jsxDEV(ArrayGroup, {\n        gameRunning: isRunning,\n        label: \"Root Array\",\n        depth: 0,\n        index: 1,\n        level: 1,\n        mergedArray: mergedArray,\n        pushToMerged: setMerged,\n        numArray: gameArray[0][1]\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"LkYUXvf2Rsu95szMBOrkrbaAuUo=\");\n\n_c2 = Game;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["/Users/Andy/Documents/GitHub/se3350_project-group-2-1/src/components/Game.jsx"],"names":["useState","useRef","MergeSort","ArrayGroup","Githubicon","WalkThrough","Grid","TextField","Button","AppBar","FormControl","RadioGroup","Radio","FormControlLabel","FormLabel","Toolbar","NavBar","Game","props","isRunning","gameArray","setGameArray","mergedArray","setMergedArray","gameType","setGameType","gameMode","setGameMode","range","setRange","size","setSize","setMerged","value","startGame","mode","current","numArray","Number","marginTop","marginLeft","display","flexDirection","width","event","target","height"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport MergeSort from \"../utils/sorting/MergeSort.js\";\nimport ArrayGroup from \"./ArrayGroup.jsx\";\nimport Githubicon from \"../images/Githubicon.js\";\nimport WalkThrough from \"./WalkThrough.jsx\";\n\nimport {\n    Grid,\n    TextField,\n    Button,\n    AppBar,\n    FormControl,\n    RadioGroup,\n    Radio,\n    FormControlLabel,\n    FormLabel,\n    Toolbar\n} from '@mui/material'\n\n/**\n * Navigation bar at top of screen, add elements to the toolbar part like drop downs etc\n *\n */\n\nconst NavBar = () => {\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant=\"dense\">\n                <div>Array Sorting Game</div>\n                <Githubicon />\n            </Toolbar>\n        </AppBar>\n    )\n}\n\n/**\n * React component containing all functionality related to the sorting game (renders the game)\n * @param props \n */\nexport default function Game(props) {\n    // State initialization\n\n    const isRunning = useRef(false); // Game is not running by default (give users a chance to set game parameters)\n    const [gameArray, setGameArray] = useState([]); // Multi-dimensional array that stores each \"layer\" of the merge sort\n    const [mergedArray, setMergedArray] = useState([]);\n\n    const [gameType, setGameType] = useState(\"Merge Sort\") //for picking between the different sorting\n    const [gameMode, setGameMode] = useState(\"playable\") //for picking between walkthrough or playable\n    \n\n    //size, range state -> array params\n    const [range, setRange] = useState(10);\n    const [size, setSize] = useState(10);\n\n    function setMerged(value) {\n        // Add value to merged array\n    }\n\n    // function determining game level\n    function startGame(mode) {\n\n        //pass in game mode for determining which button was pushed, start game or walkthough\n        if (!isRunning.current) {\n            let numArray = MergeSort(new Number(size), new Number(range));\n            setGameArray(numArray);\n            setGameMode(mode);\n            isRunning.current = true;\n        }\n    }\n\n    return (\n        <div id=\"sorting-game\">\n            <NavBar />\n            <div id=\"game-menu\" style={{ marginTop: 15, marginLeft: 20, display: 'flex', flexDirection: 'row' }}>\n                <FormControl style={{ width: 200 }}>\n                    <FormLabel id=\"demo-controlled-radio-buttons-group\">Algorithim Type</FormLabel>\n                    <RadioGroup\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                        name=\"controlled-radio-buttons-group\"\n                        value={gameType}\n                        onChange={(event) => setGameType(event.target.value)}\n                    >\n                        <FormControlLabel\n                            style={{ marginTop: 10 }}\n                            value=\"Merge Sort\"\n                            control={<Radio />}\n                            label=\"Merge Sort\"\n                        />\n                        <FormControlLabel\n                            style={{ marginTop: 10 }}\n                            value=\"Quick Sort\"\n                            control={<Radio />}\n                            label=\"Quick Sort\"\n                        />\n                    </RadioGroup>\n                </FormControl>\n                <Grid container style={{ marginLeft: 60 }}>\n                    <Grid item xs={4} xs={{ display: 'flex', flexDirection: 'row' }}>\n                        <FormLabel id=\"demo-controlled-radio-buttons-group\">Array content</FormLabel>\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\n                            <TextField\n                                style={{ marginTop: 10 }}\n                                value={range}\n                                onChange={(event) => setRange(event.target.value)}\n                                label=\"Range\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"Small\"\n                                size=\"small\"\n                            ></TextField>\n                            <TextField\n                                style={{ marginTop: 20 }}\n                                value={size}\n                                onChange={(event) => setSize(event.target.value)}\n                                label=\"Size\"\n                                id=\"outlined-size-small\"\n                                defaultValue=\"Small\"\n                                size=\"small\"\n                            ></TextField>\n                        </div>\n                    </Grid>\n                    <div style={{ marginLeft: 70, marginTop: 50 }}>\n                        {/* this section is for button display, either clear game or the start game options are shown*/}\n                        {(!isRunning.current) ? (\n                            //buttons for starting or doing the walkthough, need to be styled\n                            <>\n                                <Button\n                                    onClick={() => startGame(\"playable\")}\n                                    variant=\"contained\"\n                                    style={{ width: 140, height: 50 }}\n                                >Start Game</Button>\n                                <Button\n                                    onClick={() => startGame(\"animation\")}\n                                    variant=\"contained\"\n                                    style={{ width: 140, height: 50 }}\n                                >Level 1</Button>\n                                 <Button\n                                    onClick={() => startGame(\"playable_lvl2\")}\n                                    variant=\"contained\"\n                                    style={{ width: 140, height: 50 }}\n                                >Level 2</Button>\n                                <Button\n                                    onClick={() => startGame(\"walkthrough\")}\n                                    variant=\"contained\"\n                                    style={{ width: 140, height: 50 }}\n                                >WalkThrough</Button>\n                            </>\n                        ) : (\n                            <Button\n                                onClick={() => {\n                                    setGameArray([]);\n                                    isRunning.current = false;\n                                }}\n                                style={{ width: 140, height: 50 }}\n                                variant=\"contained\"\n                            >Clear Game</Button>\n                        )}\n                    </div>\n                </Grid>\n            </div>\n            <div>\n                {(isRunning.current) ? (\n                    //for loading the game, if game is running then...\n                    (gameMode === \"playable\") ? (\n                        //if gamemode is playable then load the array group\n                        <ArrayGroup\n                            gameRunning={isRunning}\n                            label=\"Root Array\"\n                            depth={0}\n                            key={1}\n                            index={1}\n                            level={2}\n                            mergedArray={mergedArray}\n                            pushToMerged={setMerged}\n                            numArray={gameArray[0][1]}\n                        />\n                    ) : (gameMode === \"playable_lvl2\") ? (\n                        //if gamemode is playable then load the array group\n                        <ArrayGroup\n                            gameRunning={isRunning}\n                            label=\"Root Array - Level 2\"\n                            depth={0}\n                            key={1}\n                            index={1}\n                            level={3}\n                            mergedArray={mergedArray}\n                            pushToMerged={setMerged}\n                            numArray={gameArray[0][1]}\n                        />\n                    ) : (gameMode === \"walkthrough\") ? (\n                        //if gamemode is anything else load the walkthrough\n                        <WalkThrough\n                            numArra y={gameArray}\n                        />\n                    ) : (gameMode === \"animation\") ? (\n                    //else for nothing if game isnt running\n                        <ArrayGroup\n                            gameRunning={isRunning}\n                            label=\"Root Array\"\n                            depth={0}\n                            key={1}\n                            index={1}\n                            level={1}\n                            mergedArray={mergedArray}\n                            pushToMerged={setMerged}\n                            numArray={gameArray[0][1]}\n                        />\n                    ) : (\n                        <></>\n                    )\n                ) : (\n                    <></>\n                )}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}